########### Circular Queue #################
[+] The size of the queue is fixed and a single block of memory is used as if the first element is connected to the last element
[+] Also reffered to as circular buffer or ring buffer and follows FIFO principle
[+] A circular queue will reuse the empty block created during the dequeue operation 
[+] When working with queues of fixed maximum size, a sircular queue is a great implementation choice
[+] The Circular Queue data structure supports two main operations
    [+] Enqueue, which adds an element to the rear/tail of the collection
    [+] Dequeue, which removes an element from the front/head of the collection 



########### Circular Queue Usage ##############
[+] Clock 
[+] Streaming data
[+] Traffic light



########### Queue Implementation ############
[+] enqueue(element) - add an element ti the queue
[+] dequeue() - remove the oldest element from the queue
[+] peek() - get the value of the element at the front of the queue without removing it 
[+] isFull() - check if the queue is is Full 
[+] isEmpty() - check if the queue is is empty 
[+] size() - get the number of the elements in the queue 
[+] print() - visualize the elements in the queue 